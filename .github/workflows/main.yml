name: YAML Change Notifier for Charts

on:
  push:
    branches:
      - main
    paths:
      - 'Charts/**/*.yaml'
      - 'Charts/**/*.yml'

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: '3'
    - name: Collect and Send POST requests for modified or added YAML files
      env:
        SPRING_BOOT_URL: https://1f98-203-110-85-250.ngrok-free.app/api/dp
      run: |
        payload_array="["
        first=true
        for file in $(git diff --name-only --diff-filter=AM HEAD^1 HEAD | grep -E 'Charts/.*\.(yml|yaml)'); do
            author_name=$(git log -1 --pretty=format:'%an' -- "$file")
            author_email=$(git log -1 --pretty=format:'%ae' -- "$file")
            if [[ "$file" == Charts/serverConfig/* ]]; then
                name=$(yq eval '.name' "$file")
                changes=$(git diff HEAD^1 HEAD -- "$file" | grep '^[+-]' | grep -Ev '^\+\+\+|---')
                changes_json=$(echo "$changes" | awk '{
                    gsub("^[+-]", "")
                    split($0, arr, " : ")
                    key=arr[1]
                    value=arr[2]
                    gsub(" ", "", key)
                    gsub(/^ /, "", value)
                    gsub(/ $/, "", value)
                    gsub(/"$/, "", value)
                    gsub(/^"/, "", value)
                    if (value ~ /^true|false$/) {
                        printf "\"%s\":%s", key, value
                    } else {
                        printf "\"%s\":\"%s\"", key, value
                    }
                    if (NR != NR+1) {
                        printf ","
                    }
                }')
                changes_json="{$changes_json}"
                payload=$(jq -n \
                    --arg file "$file" \
                    --arg author_name "$author_name" \
                    --arg author_email "$author_email" \
                    --arg name "$name" \
                    --argjson changes "$changes_json" \
                    '{file: $file, author: {name: $author_name, email: $author_email}, name: $name, changes: $changes}')
            else 
                key=$(yq eval '.key' "$file")
                changes=$(git diff HEAD^1 HEAD -- "$file" | grep '^[+-]' | grep -Ev '^\+\+\+|---')
                changes_json=$(echo "$changes" | awk '{
                    gsub("^[+-]", "")
                    split($0, arr, " : ")
                    key=arr[1]
                    value=arr[2]
                    gsub(" ", "", key)
                    gsub(/^ /, "", value)
                    gsub(/ $/, "", value)
                    gsub(/"$/, "", value)
                    gsub(/^"/, "", value)
                    if (value ~ /^true|false$/) {
                        printf "\"%s\":%s", key, value
                    } else {
                        printf "\"%s\":\"%s\"", key, value
                    }
                    if (NR != NR+1) {
                        printf ","
                    }
                }')
                changes_json="{$changes_json}"
                payload=$(jq -n \
                    --arg file "$file" \
                    --arg author_name "$author_name" \
                    --arg author_email "$author_email" \
                    --arg key "$key" \
                    --argjson changes "$changes_json" \
                    '{file: $file, author: {name: $author_name, email: $author_email}, key: $key, changes: $changes}')
            fi
        
            if [ "$first" = true ]; then
                payload_array="$payload_array$payload"
                first=false
            else
                payload_array="$payload_array,$payload"
            fi
        done
        
        payload_array="$payload_array]"
        curl -X POST -H "Content-Type: application/json" -d "$payload_array" "$SPRING_BOOT_URL"

# name: YAML Change Notifier for Charts all property

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'Charts/**/*.yaml'
#       - 'Charts/**/*.yml'

# jobs:
#   notify:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
#       with:
#         fetch-depth: '3'
#     - name: Collect and Send POST requests for modified or added YAML files
#       env:
#         SPRING_BOOT_URL: https://1f98-203-110-85-250.ngrok-free.app/api/dp
#       run: |
#         payload_array="["
#         first=true

#         for file in $(git diff --name-only --diff-filter=AM HEAD^1 HEAD | grep -E 'Charts/.*\.(yml|yaml)'); do
#             author_name=$(git log -1 --pretty=format:'%an' -- "$file")
#             author_email=$(git log -1 --pretty=format:'%ae' -- "$file")

#             if [[ "$file" == Charts/serverConfig/* ]]; then
#                 name=$(yq eval '.name' "$file")
#                 changes=$(git diff HEAD^1 HEAD -- "$file" | grep '^[+-]' | grep -Ev '^\+\+\+|---')
#                 payload=$(jq -n \
#                     --arg file "$file" \
#                     --arg author_name "$author_name" \
#                     --arg author_email "$author_email" \
#                     --arg name "$name" \
#                     --arg changes "$changes" \
#                     '{file: $file, author: {name: $author_name, email: $author_email}, name: $name, changes: $changes}')
#             else 
#                 key=$(yq eval '.key' "$file")
#                 changes=$(git diff HEAD^1 HEAD -- "$file" | grep '^[+-]' | grep -Ev '^\+\+\+|---')
#                 payload=$(jq -n \
#                     --arg file "$file" \
#                     --arg author_name "$author_name" \
#                     --arg author_email "$author_email" \
#                     --arg key "$key" \
#                     --arg changes "$changes" \
#                     '{file: $file, author: {name: $author_name, email: $author_email}, key: $key, changes: $changes}')
#             fi
        
#             if [ "$first" = true ]; then
#                 payload_array="$payload_array$payload"
#                 first=false
#             else
#                 payload_array="$payload_array,$payload"
#             fi
#         done
        
#         payload_array="$payload_array]"
#         curl -X POST -H "Content-Type: application/json" -d "$payload_array" "$SPRING_BOOT_URL"

# name: YAML Change Notifier for Charts

# on:
#   push:
#     branches:
#       - main
#     paths:
#       - 'Charts/**/*.yaml'
#       - 'Charts/**/*.yml'

# jobs:
#   notify:
#     runs-on: ubuntu-latest

#     steps:
#     - name: Checkout repository
#       uses: actions/checkout@v4
#       with:
#           fetch-depth: '3'
#     - name: Collect and Send POST requests for modified or added YAML files
#       env:
#           SPRING_BOOT_URL: ${{ secrets.SPRING_BOOT_URL }}
#       run: |
#         payload_array="["
#         first=true
        
#         for file in $(git diff --name-only --diff-filter=AM HEAD^1 HEAD | grep -E 'Charts/.*\.(yml|yaml)'); do
#             author_name=$(git log -1 --pretty=format:'%an' -- "$file")
#             author_email=$(git log -1 --pretty=format:'%ae' -- "$file")
#             key=$(yq eval '.key' "$file")
#             property=$(yq eval '.property' "$file")
#             value=$(yq eval '.value' "$file")
#             reason=$(yq eval '.reason' "$file")
#             deleted=$(yq eval '.deleted // false' "$file")
#             payload=$(jq -n \
#                 --arg file "$file" \
#                 --arg author_name "$author_name" \
#                 --arg author_email "$author_email" \
#                 --arg commit_time "$commit_time" \
#                 --arg key "$key" \
#                 --arg property "$property" \
#                 --argjson value "$value" \
#                 --arg reason "$reason" \
#                 --argjson deleted "$deleted" \
#                 '{file: $file, author: {name: $author_name, email: $author_email}, key: $key, property: $property, value: $value, reason: $reason, deleted: $deleted}')
        
#             if [ "$first" = true ]; then
#                 payload_array="$payload_array$payload"
#                 first=false
#             else
#                 payload_array="$payload_array,$payload"
#             fi
#         done
        
#         payload_array="$payload_array]"
#         curl -X POST -H "Content-Type: application/json" -d "$payload_array" "$SPRING_BOOT_URL"


